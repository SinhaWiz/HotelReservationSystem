-- Oracle SQL script for Hotel Rental System
-- Run this script as the rentalplatform user

-- Create sequences for auto-incrementing IDs
CREATE SEQUENCE users_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE properties_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE bookings_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE payments_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE reviews_seq START WITH 1 INCREMENT BY 1;

-- Create Users table
CREATE TABLE users (
    user_id NUMBER DEFAULT users_seq.NEXTVAL PRIMARY KEY,
    username VARCHAR2(50) NOT NULL UNIQUE,
    password VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) NOT NULL UNIQUE,
    name VARCHAR2(100) NOT NULL,
    user_type VARCHAR2(10) CHECK (user_type IN ('host', 'renter')) NOT NULL,
    phone_number VARCHAR2(20),
    address VARCHAR2(255),
    date_of_registration TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create Properties table
CREATE TABLE properties (
    property_id NUMBER DEFAULT properties_seq.NEXTVAL PRIMARY KEY,
    host_id NUMBER NOT NULL,
    title VARCHAR2(100) NOT NULL,
    description CLOB,
    property_type VARCHAR2(10) CHECK (property_type IN ('apartment', 'house', 'villa')) NOT NULL,
    location VARCHAR2(255) NOT NULL,
    city VARCHAR2(50) NOT NULL,
    state VARCHAR2(50),
    country VARCHAR2(50) NOT NULL,
    price_per_night NUMBER(10, 2) NOT NULL,
    bedrooms NUMBER NOT NULL,
    bathrooms NUMBER NOT NULL,
    max_guests NUMBER NOT NULL,
    amenities CLOB,
    availability_status NUMBER(1) DEFAULT 1 CHECK (availability_status IN (0, 1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_properties_host FOREIGN KEY (host_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Create Bookings table
CREATE TABLE bookings (
    booking_id NUMBER DEFAULT bookings_seq.NEXTVAL PRIMARY KEY,
    property_id NUMBER NOT NULL,
    renter_id NUMBER NOT NULL,
    check_in_date DATE NOT NULL,
    check_out_date DATE NOT NULL,
    total_price NUMBER(10, 2) NOT NULL,
    booking_status VARCHAR2(10) CHECK (booking_status IN ('confirmed', 'pending', 'cancelled')) DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_bookings_property FOREIGN KEY (property_id) REFERENCES properties(property_id) ON DELETE CASCADE,
    CONSTRAINT fk_bookings_renter FOREIGN KEY (renter_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Create Payments table
CREATE TABLE payments (
    payment_id NUMBER DEFAULT payments_seq.NEXTVAL PRIMARY KEY,
    booking_id NUMBER NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    payment_method VARCHAR2(15) CHECK (payment_method IN ('credit card', 'PayPal', 'bank transfer')) NOT NULL,
    amount NUMBER(10, 2) NOT NULL,
    CONSTRAINT fk_payments_booking FOREIGN KEY (booking_id) REFERENCES bookings(booking_id) ON DELETE CASCADE
);

-- Create Reviews table
CREATE TABLE reviews (
    review_id NUMBER DEFAULT reviews_seq.NEXTVAL PRIMARY KEY,
    property_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    rating NUMBER CHECK (rating BETWEEN 1 AND 5) NOT NULL,
    comment CLOB,
    date_posted TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_reviews_property FOREIGN KEY (property_id) REFERENCES properties(property_id) ON DELETE CASCADE,
    CONSTRAINT fk_reviews_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Username Updates Audit Table
CREATE TABLE username_update_audit (
    audit_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER,
    old_username VARCHAR2(50) NOT NULL,
    new_username VARCHAR2(50) NOT NULL,
    updated_at TIMESTAMP
);

-- DDL log table
CREATE TABLE ddl_log (
    event_type VARCHAR2(20),
    object_type VARCHAR2(20),
    object_name VARCHAR2(100),
    event_timestamp TIMESTAMP,
    triggered_by VARCHAR2(50)
);

-- Trigger to log DDL changes
CREATE OR REPLACE TRIGGER trg_ddl_logger
AFTER DDL ON SCHEMA
BEGIN
    INSERT INTO ddl_log(event_type, object_type, object_name, event_date, triggered_by)
    VALUES (
        ORA_SYSEVENT,
        ORA_DICT_OBJ_TYPE,
        ORA_DICT_OBJ_NAME,
        CURRENT_TIMESTAMP,
        SYS_CONTEXT('USERENV','SESSION_USER')
    );
END;
/

-- Create triggers for updated_at timestamps
CREATE OR REPLACE TRIGGER users_update_trigger
    BEFORE UPDATE ON users
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER properties_update_trigger
    BEFORE UPDATE ON properties
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER bookings_update_trigger
    BEFORE UPDATE ON bookings
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

